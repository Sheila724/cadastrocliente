name: Deploy Full Stack

on:
  push:
    branches: [main]

env:
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  PORT: 8200
  DISABLE_REDIS: true
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install --omit=dev

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            sheila421/clientes-app:latest
            sheila421/clientes-app:${{ github.sha }}
          build-args: |
            POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
            SESSION_SECRET=${{ env.SESSION_SECRET }}
            NODE_ENV=${{ env.NODE_ENV }}

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}  # Recomendado usar secret
          username: 'aluno'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}  # Porta dinâmica ou fallback para 22
          script: |
            #!/bin/bash
            set -e
            
            # 1. Cria rede e volume (se não existirem)
            docker network inspect rede-da-sheila >/dev/null 2>&1 || docker network create rede-da-sheila
            docker volume inspect pgdata >/dev/null 2>&1 || docker volume create pgdata

            # 2. Banco de dados PostgreSQL (reinicia se já existir)
            docker stop sheila_postgres || true
            docker rm sheila_postgres || true
            docker run -d --name sheila_postgres \
              --network rede-da-sheila \
              -e POSTGRES_PASSWORD='${{ env.POSTGRES_PASSWORD }}' \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_DB=connect_sphere \
              -v pgdata:/var/lib/postgresql/data \
              -p 5432:5432 \
              --restart unless-stopped \
              postgres:17

            # 3. Aplicação principal (usa porta do intervalo 8212-8217)
            APP_PORT=8212  # Primeira porta do intervalo
            docker stop sheila_app || true
            docker rm sheila_app || true
            docker pull sheila421/clientes-app:latest
            
            docker run -d --name sheila_app \
              --network rede-da-sheila \
              -p ${APP_PORT}:8200 \
              -e PORT=8200 \
              -e POSTGRES_HOST=sheila_postgres \
              -e POSTGRES_PASSWORD='${{ env.POSTGRES_PASSWORD }}' \
              -e SESSION_SECRET='${{ env.SESSION_SECRET }}' \
              -e NODE_ENV=production \
              --restart unless-stopped \
              sheila421/clientes-app:latest

            # 4. Health check com timeout
            timeout 30 bash -c 'while ! curl -sSf http://localhost:${APP_PORT}/health >/dev/null; do sleep 2; done' || {
              echo "Health check failed after 30 seconds"
              exit 1
            }