name: Deploy Full Stack

on:
  push:
    branches: [main]

env:
  # Variáveis de ambiente que serão usadas tanto no build da imagem quanto no deploy no servidor
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  PORT: 8213
  DISABLE_REDIS: true
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6 # Recomendo a v6, que é a mais recente estável
        with:
          context: . # Usa o Dockerfile no diretório raiz do repositório
          push: true
          tags: |
            sheila421/clientes-app:latest 
            sheila421/clientes-app:${{ github.sha }} 
          build-args: | 
            POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
            SESSION_SECRET=${{ env.SESSION_SECRET }}
            NODE_ENV=${{ env.NODE_ENV }}

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1 
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: POSTGRES_PASSWORD,SESSION_SECRET,PORT,DISABLE_REDIS,NODE_ENV 
          script: |
            #!/bin/bash
            set -e           # Aborta o script em caso de erro
            set -o pipefail  # Aborta o script se um comando em um pipe falhar

            echo "Iniciando deploy no servidor..."

            # 1. Criar rede Docker personalizada (se não existir)
            echo "Verificando/Criando rede Docker 'rede-da-sheila'..."
            docker network create rede-da-sheila || true

            # 2. Criar volume persistente para PostgreSQL (se não existir)
            echo "Verificando/Criando volume Docker 'pgdata' para PostgreSQL..."
            docker volume create pgdata || true

            # 3. Gerenciar e iniciar o container PostgreSQL
            echo "Parando e removendo container PostgreSQL antigo (se existir)..."
            docker stop sheila_postgres || true
            docker rm sheila_postgres || true

            echo "Iniciando novo container PostgreSQL 'sheila_postgres'..."
            docker run -d --name sheila_postgres \
              --network rede-da-sheila \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_DB=connect_sphere \
              -e POSTGRES_PASSWORD="${POSTGRES_PASSWORD}" \ # Variável de ambiente do shell
              -v pgdata:/var/lib/postgresql/data \
              -p 8214:5432 \
              postgres:17
            echo "PostgreSQL iniciado."

            # 4. Puxar a última imagem do Docker Hub
            echo "Puxando a última imagem Docker da aplicação 'sheila421/clientes-app:latest'..."
            docker pull sheila421/clientes-app:latest

            # 5. Gerenciar e iniciar o novo container da aplicação
            echo "Parando e removendo container da aplicação antigo (se existir)..."
            docker stop sheila_app || true
            docker rm sheila_app || true

            echo "Iniciando novo container da aplicação 'sheila_app'..."
            docker run -d --name sheila_app \
              --network rede-da-sheila \
              -p 8213:8213 \
              -e PORT="${PORT}" \
              -e POSTGRES_HOST=sheila_postgres \ # Aponta para o container do Postgres na mesma rede
              -e POSTGRES_PASSWORD="${POSTGRES_PASSWORD}" \
              -e SESSION_SECRET="${SESSION_SECRET}" \
              -e NODE_ENV="${NODE_ENV}" \
              -e DISABLE_REDIS="${DISABLE_REDIS}" \
              sheila421/clientes-app:latest
            echo "Container da aplicação iniciado."
            
            # ATENÇÃO: A verificação de saúde foi removida conforme sua solicitação.
            # O deploy será considerado bem-sucedido se todos os comandos Docker forem executados sem erro.
            # No entanto, a aplicação pode não ter iniciado corretamente mesmo assim.
            
            echo "Deploy finalizado. Verifique os logs da aplicação diretamente no servidor se houver problemas."
            echo "Últimos logs da aplicação 'sheila_app' para referência:"
            docker logs sheila_app # Ainda mantém o log final para sua referência